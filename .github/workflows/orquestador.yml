name: Orquestador de despliegue de aplicaciones
on:
  workflow_call:
    inputs:
      rama:
        description: 'Rama a desplegar - Permite saber si desplegaremos en producción (rama main) o en desarrollo (rama develop)'
        required: true
        type: string
      tecnologia:
        description: 'Tecnología a desplegar'
        required: true
        type: string
      tipo_despliegue:
        description: 'Tipo de despliegue'
        required: true
        type: string
      despliegue_en:
        description: 'Entorno de despliegue'
        required: true
        type: string
      SONAR_HOST_URL:
        description: 'URL del servidor de SonarQube'
        required: false
        type: string
    secrets:
      ##################################################################
      # Parámetros para conectarse al servidor y tokens
      ##################################################################

      server_ip:
        description: 'Dirección IP del servidor donde se desplegará la aplicación - Ejemplo: 192.168.1.1'
        required: false
      remote_user:
        description: 'Usuario para conectarse al servidor remoto - Ejemplo: administrador'
        required: false
      tomcat_path:
        description: 'Ruta de instalación de Tomcat en el servidor remoto - Ejemplo: C:\Program Files\Apache Software Foundation\Tomcat 9.0'
        required: false
      project_path:
        description: 'Ruta del proyecto en el servidor remoto - Ejemplo: C:\inetpub\wwwroot\mi-proyecto'
        required: false
      app_port:
        description: 'Puerto de la aplicación - Ejemplo: 3000'
        required: false
      SONAR_TOKEN:
        description: 'Token de autenticación de SonarQube'
        required: false

      ##################################################################
      # Las dos siguientes deberían ser eliminadas si no se usa AKS
      ##################################################################
      resource_group:
        description: 'Nombre del grupo de recursos de Azure'
        required: false
      aks_cluster_name:
        description: 'Nombre del clúster AKS'
        required: false
      
    ##################################################################
    # Variables de repositorio:
    # - project_path: Ruta del proyecto en el servidor remoto
    # - tomcat_path: Ruta de instalación de Tomcat en el servidor remoto
    # - site_name: Nombre del sitio en IIS
    # - app_name: Nombre de la aplicación -> Por ahora se saca desde el output de la job de build
    # - port_site: Puerto del sitio en IIS
    # - app_pool_name: Nombre del Application Pool en IIS
    # - port_app: Puerto de la aplicación para hacer reverse proxy
    # - host_header: Host header para el binding del sitio en IIS
    # - ip_address: Dirección IP para el binding del sitio en IIS
    ##################################################################

jobs:
  build:
    runs-on: self-hosted
    # if: inputs.requiere_compilar
    outputs:
      app_name: ${{ steps.build_step_java.outputs.app_name || steps.build_step_net_framework.outputs.app_name || steps.build_step_php_laravel.outputs.app_name || steps.build_step_node.outputs.app_name || steps.build_step_kubernetes.outputs.app_name }}
      version: ${{ steps.build_step_java.outputs.version || steps.build_step_net_framework.outputs.version }}
      extension: ${{ steps.build_step_java.outputs.extension || steps.build_step_net_framework.outputs.extension }}
      start_command: ${{ steps.build_step_node.outputs.start_command || '' }}
    steps:
      - name: Checkout app repository
        uses: actions/checkout@v4
        with:
          path: app
      - name: Checkout orquestador repository
        uses: actions/checkout@v4
        with:
          repository: jgallardo-clever/test-orquestador-fge
          path: orquestador
      - name: Información del entorno a compilar
        run: |
          echo "Rama: ${{ inputs.rama }}"
          echo "Tecnología: ${{ inputs.tecnologia }}"
      - name: Build Java Spring Boot 2.5.12
        id: build_step_java
        if: ${{ inputs.tecnologia == 'java-springboot-2.5.12' }}
        uses: ./orquestador/.github/actions/build/java-springboot-2.5.12
        with:
          server_ip: ${{ secrets.server_ip }}
          remote_user: ${{ secrets.remote_user }}

      - name: Tomar outputs de la build Java Spring Boot 2.5.12
        if: ${{ inputs.tecnologia == 'java-springboot-2.5.12' }}
        run: |
          echo "Nombre de la aplicación: ${{ steps.build_step_java.outputs.app_name }}"
          echo "Versión de la aplicación: ${{ steps.build_step_java.outputs.version }}"
          echo "Extensión del artefacto: ${{ steps.build_step_java.outputs.extension }}"

      - name: Build .NET Framework
        id: build_step_net_framework
        if: ${{ inputs.tecnologia == 'net-framework' }}
        uses: ./orquestador/.github/actions/build/net-framework
        with:
          server_ip: ${{ secrets.server_ip }}
          remote_user: ${{ secrets.remote_user }}

      - name: Tomar outputs de la build .NET Framework
        if: ${{ inputs.tecnologia == 'net-framework' }}
        run: |
          echo "Nombre de la aplicación: ${{ steps.build_step_net_framework.outputs.app_name }}"

      - name: Build PHP Laravel
        id: build_step_php_laravel
        if: ${{ inputs.tecnologia == 'php-laravel' }}
        uses: ./orquestador/.github/actions/build/php-laravel
        with:
          server_ip: ${{ secrets.server_ip }}
          remote_user: ${{ secrets.remote_user }}
          app_key: ${{ secrets.app_key }}
          app_url: ${{ secrets.app_url }}

      - name: Tomar outputs de la build PHP Laravel
        if: ${{ inputs.tecnologia == 'php-laravel' }}
        run: |
          echo "Nombre de la aplicación: ${{ steps.build_step_php_laravel.outputs.app_name }}"

      - name: Build Node.js
        id: build_step_node
        if: ${{ inputs.tecnologia == 'nodejs' && inputs.despliegue_en == 'IIS' }}
        uses: ./orquestador/.github/actions/build/nodejs-iis
        with:
          server_ip: ${{ secrets.server_ip }}
          remote_user: ${{ secrets.remote_user }}

      - name: Tomar outputs de la build Node.js
        if: ${{ inputs.tecnologia == 'nodejs' }}
        run: |
          echo "Nombre de la aplicación: ${{ steps.build_step_node.outputs.app_name }}"
          echo "Ruta de inicio: ${{ steps.build_step_node.outputs.start_command }}"

      - name: Build Kubernetes
        id: build_step_kubernetes
        if: ${{ inputs.tecnologia == 'kubernetes' }}
        uses: ./orquestador/.github/actions/build/kubernetes

      - name: Tomar outputs de la build Kubernetes
        if: ${{ inputs.tecnologia == 'kubernetes' }}
        run: |
          echo "Nombre de la aplicación: ${{ steps.build_step_kubernetes.outputs.app_name }}"

  test:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout repository app
        uses: actions/checkout@v4
        with:
          path: app

      - name: Checkout repository orquestador
        uses: actions/checkout@v4
        with:
          repository: jgallardo-clever/test-orquestador-fge
          path: orquestador

      - name: Información del entorno a testear
        run: |
          echo "Rama: ${{ inputs.rama }}"
          echo "Tecnología: ${{ inputs.tecnologia }}"
      # - name: Test Java Spring Boot 2.5.12
      #   if: ${{ inputs.tecnologia == 'java-springboot-2.5.12' }}
      #   uses: ./orquestador/.github/actions/test/java-springboot-2.5.12

      # - name: Test Node.js
      #   if: ${{ inputs.tecnologia == 'nodejs' }}
      #   uses: ./orquestador/.github/actions/test/nodejs

      # - name: Test .NET Framework
      #   if: ${{ inputs.tecnologia == 'net-framework' }}
      #   uses: ./orquestador/.github/actions/test/net-framework

  code-analysis:
    runs-on: self-hosted
    needs: [build, test]
    steps:
      - name: Checkout repository app
        uses: actions/checkout@v4
        with:
          path: app

      - name: Checkout orquestador repository
        uses: actions/checkout@v4
        with:
          repository: jgallardo-clever/test-orquestador-fge
          path: orquestador

      # - name: Run SonarQube Analysis
      #   uses: ./orquestador/.github/actions/code-analysis
      #   with:
      #     tecnologia: ${{ inputs.tecnologia }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ inputs.SONAR_HOST_URL }}

  deploy:
    runs-on: self-hosted
    needs: [build, test, code-analysis]
    steps:
      - name: Checkout orquestador repository
        uses: actions/checkout@v4
        with:
          repository: jgallardo-clever/test-orquestador-fge
          path: orquestador
      - name: Checkout app repository
        uses: actions/checkout@v4
        with:
          path: app
      - name: Información del entorno a desplegar
        run: |
          echo "Rama: ${{ inputs.rama }}"
          echo "Tecnología: ${{ inputs.tecnologia }}"
          echo "Despliegue en: ${{ inputs.despliegue_en }}"
      - name: Deploy Java Spring Boot 2.5.12
        if: ${{ inputs.tecnologia == 'java-springboot-2.5.12' }}
        uses: ./orquestador/.github/actions/deploy/java-springboot-2.5.12
        with:
          server_ip: ${{ secrets.SERVER_IP }}
          remote_user: ${{ secrets.REMOTE_USER }}
          tomcat_path: ${{ secrets.TOMCAT_PATH }}
          app_name: ${{ needs.build.outputs.app_name }}
          version: ${{ needs.build.outputs.version }}
          extension: ${{ needs.build.outputs.extension }}
          ip_address: 'localhost'

      - name: Deploy .NET Framework
        if: ${{ inputs.tecnologia == 'net-framework' }}
        uses: ./orquestador/.github/actions/deploy/net-framework
        with:
          # Conexión al servidor
          server_ip: ${{ secrets.SERVER_IP }}
          remote_user: ${{ secrets.REMOTE_USER }}
          # Tipo de despliegue
          tipo_despliegue: ${{ inputs.tipo_despliegue }}
          # Configuración IIS
          site_name: ${{ vars.SITE_NAME }}
          project_path: '${{ vars.PROJECT_PATH }}'
          ip_address: ${{ vars.IP_ADDRESS || '*' }}
          host_header: ${{ vars.HOST_HEADER || 'localhost' }}
          port_site: ${{ vars.PORT_SITE || '80' }}
          app_pool_name: ${{ needs.build.outputs.app_name }}-app-pool
          # Nombre de la aplicación
          app_name: ${{ needs.build.outputs.app_name }}

      - name: Deploy PHP Laravel
        if: ${{ inputs.tecnologia == 'php-laravel' }}
        uses: ./orquestador/.github/actions/deploy/php-laravel
        with:
          server_ip: ${{ secrets.SERVER_IP }}
          remote_user: ${{ secrets.REMOTE_USER }}
          project_path: '${{ secrets.PROJECT_PATH }}'
          app_name: test-app

      - name: Deploy Node.js IIS
        if: ${{ inputs.tecnologia == 'nodejs' && inputs.despliegue_en == 'IIS' }}
        uses: ./orquestador/.github/actions/deploy/nodejs-iis
        with:
          server_ip: ${{ secrets.SERVER_IP }}
          remote_user: ${{ secrets.REMOTE_USER }}
          project_path: '${{ secrets.PROJECT_PATH }}'
          app_name: ${{ needs.build.outputs.app_name }}
          start_command: ${{ needs.build.outputs.start_command }}
          app_port: ${{ secrets.APP_PORT }}

      - name: Deploy Kubernetes
        if: ${{ inputs.tecnologia == 'kubernetes' }}
        uses: ./orquestador/.github/actions/deploy/kubernetes
        with:
          app_name: ${{ needs.build.outputs.app_name }}
          resource_group: ${{ secrets.resource_group }}
          aks_cluster_name: ${{ secrets.aks_cluster_name }}