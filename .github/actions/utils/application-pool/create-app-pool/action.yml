name: Crear App Pool de IIS
description: 'Esta acción crea un Application Pool en IIS'
inputs:
  app_pool_name:
    description: 'Nombre del Application Pool a crear'
    required: true
  managed_runtime_version:
    description: 'Versión de .NET Framework para el Application Pool'
    required: true
    default: 'v4.0'
  managed_pipeline_mode:
    description: 'Modo de canalización administrada para el Application Pool'
    required: true
    default: 'Integrated'
  servidor_remoto:
    description: 'Nombre o dirección IP del servidor remoto donde se creará el Application Pool'
    required: true
  usuario:
    description: 'Usuario para conectarse al servidor remoto'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Ver parámetros de entrada
      run: |
        echo "Creando App Pool de IIS con los siguientes parámetros:"
        echo "Nombre del App Pool: ${{ inputs.app_pool_name }}"
        echo "Versión de .NET: ${{ inputs.managed_runtime_version }}"
        echo "Modo de canalización: ${{ inputs.managed_pipeline_mode }}"
      shell: powershell
    - name: Crear App Pool
      run: |
        echo "Creando App Pool de IIS..."
        
        # Comando PowerShell simple y directo
        $command = @"
        Import-Module WebAdministration; 
        if (Get-IISAppPool -Name '${{ inputs.app_pool_name }}' -ErrorAction SilentlyContinue) { 
          Write-Host 'App Pool ${{ inputs.app_pool_name }} ya existe' 
        } else { 
          echo "Creando App Pool ${{ inputs.app_pool_name }}...";
          New-WebAppPool -Name '${{ inputs.app_pool_name }}' -Force;
          echo "Configurando Managed Runtime Version ${{ inputs.managed_runtime_version }}...";
          Set-ItemProperty -Path 'IIS:\AppPools\${{ inputs.app_pool_name }}' -Name managedRuntimeVersion -Value '${{ inputs.managed_runtime_version }}';
          echo "Configurando Managed Pipeline Mode ${{ inputs.managed_pipeline_mode }}...";
          Set-ItemProperty -Path 'IIS:\AppPools\${{ inputs.app_pool_name }}' -Name managedPipelineMode -Value '${{ inputs.managed_pipeline_mode }}';
          Write-Host 'App Pool ${{ inputs.app_pool_name }} creado exitosamente'
        }
        "@
        
        # Ejecutar remotamente con -Command
        ssh ${{ inputs.usuario }}@${{ inputs.servidor_remoto }} "powershell -Command $command"
        
        if ($LASTEXITCODE -eq 0) {
          echo "App Pool de IIS creado exitosamente."
        } else {
          echo "Error al crear App Pool de IIS."
          exit 1
        }
      shell: powershell
      working-directory: ./orquestador/.github/actions/utils/application-pool/create-app-pool